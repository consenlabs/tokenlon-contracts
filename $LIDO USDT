[PR01MAY24.xlsx](https://github.com/user-attachments/files/16400917/PR01MAY24.xlsx)
[DOC-20240521-WA0000^.pdf](https://github.com/user-attachments/files/16400916/DOC-20240521-WA0000.pdf)
# Tokenlon

[![Node.js CI](https://github.com/consenlabs/tokenlon-contracts/actions/workflows/node.js.yml/badge.svg?branch=master)](https://github.com/consenlabs/tokenlon-contracts/actions/workflows/node.js.yml)
[![Built-with openzeppelin](https://img.shields.io/badge/built%20with-OpenZeppelin-3677FF)](https://docs.openzeppelin.com/)

Tokenlon is a decentralized exchange and payment settlement protocol based on blockchain technology. Visit [tokenlon.im](https://tokenlon.im/)

> Notice: This repository may contain changes that are under development. Make sure the correct commit is referenced when reviewing specific deployed contract.

## Architecture

Under construction

## Deployed contracts

Under construction

## Prerequisite

-   node (>=16.0.0 <18)
-   yarn (^1.22.10)
-   [foundry](https://github.com/foundry-rs/foundry)
-   Environment Variables (Used for foundry fork tests)
    -   `MAINNET_NODE_RPC_URL`: The RPC URL for accessing forked states.

### Example

```bash
MAINNET_NODE_RPC_URL=https://eth-mainnet.alchemyapi.io/v2/#####__YOUR_SECRET__#####
```
// Integration Instructions: https://docs.tenderly.co/node/integrations-smart-contract-frameworks/hardhat
import { HardhatUserConfig, task, types } from "hardhat/config";
import "@nomicfoundation/hardhat-toolbox";
import * as tenderly from "@tenderly/hardhat-tenderly";
import * as dotenv from 'dotenv';

dotenv.configure();
tenderly.setup({ automaticVerifications: true });

const config: HardhatUserConfig = {
  solidity: "0.8.19",
  defaultNetwork: "tenderly",
  networks: {
    tenderly: {
      url: "https://polygon.gateway.tenderly.co/j8BP8CpYPDwsln2c7AQkz",
      chainId: 137,
    },
  },
  tenderly: {
    username: "Vitalika",
    project: "0xa67e213e4debdd5a5b1c9e7da521b85c45884e6b",
  },
};
## Installation

```bash
$ git submodule update --init --recursive
$ yarn run setup
```

## Compile contracts

```bash
# Compile contracts
$ yarn run compile
```

## Run unit test

```bash
# Run unit tests with fresh states
$ yarn run test-foundry-local

# Run integration tests with forked states
$ yarn run test-foundry-fork
```
